# Generated by Django 4.2.7 on 2024-02-11 10:52

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('user_type', models.CharField(blank=True, choices=[('consumer', 'Consumer'), ('provider', 'Provider')], max_length=10, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Cluster',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Consumer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('power_supply_number', models.CharField(max_length=11, validators=[django.core.validators.RegexValidator(code='invalid_power_supply_number', message='Power supply number must be 11 digits', regex='^\\d{11}$')])),
                ('contact_phone', models.CharField(blank=True, max_length=15, null=True)),
                ('building_type', models.CharField(blank=True, max_length=50, null=True)),
                ('square_meters', models.CharField(blank=True, max_length=50, null=True)),
                ('floor', models.CharField(blank=True, max_length=50, null=True)),
                ('building_built', models.CharField(blank=True, max_length=50, null=True)),
                ('frames', models.CharField(blank=True, max_length=255, null=True)),
                ('heating_type', models.CharField(blank=True, max_length=255, null=True)),
                ('have_solar_panels', models.BooleanField(blank=True, null=True)),
                ('hot_water', models.CharField(blank=True, max_length=255, null=True)),
                ('ev_car_charger', models.BooleanField(blank=True, null=True)),
                ('consumer_type', models.CharField(choices=[('individual', 'Individual'), ('company', 'Company')], max_length=10)),
                ('full_name', models.CharField(blank=True, max_length=255, null=True)),
                ('birthdate', models.DateField(blank=True, null=True)),
                ('number_of_occupants', models.IntegerField(blank=True, null=True)),
                ('type_of_occupants', models.CharField(blank=True, max_length=255, null=True)),
                ('age_electricity_manager', models.CharField(blank=True, max_length=50, null=True)),
                ('company_name', models.CharField(blank=True, max_length=255, null=True)),
                ('tax_identification_number', models.CharField(blank=True, max_length=20, null=True)),
                ('number_of_employees', models.IntegerField(blank=True, null=True)),
                ('cluster', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='consumers', to='backend_app.cluster')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='consumer_profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='SecretProviderKey',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('secret_provider_key', models.CharField(max_length=255, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Provider',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='provider_profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='KwhPrice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('month', models.IntegerField(choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11), (12, 12)])),
                ('year', models.IntegerField()),
            ],
            options={
                'unique_together': {('month', 'year')},
            },
        ),
        migrations.CreateModel(
            name='ForecastingConsumerConsumption',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('datetime', models.DateTimeField()),
                ('forecasting_consumption_kwh', models.DecimalField(decimal_places=3, max_digits=10)),
                ('consumer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='forecasting_consumptions', to='backend_app.consumer')),
            ],
            options={
                'ordering': ['-datetime'],
                'get_latest_by': 'datetime',
                'indexes': [models.Index(fields=['datetime'], name='backend_app_datetim_4af3de_idx'), models.Index(fields=['consumer', 'datetime'], name='backend_app_consume_192eb4_idx')],
                'unique_together': {('consumer', 'datetime')},
            },
        ),
        migrations.CreateModel(
            name='ConsumerMonthlyConsumptionAggregate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('month', models.IntegerField(choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11), (12, 12)])),
                ('consumption_kwh_sum', models.DecimalField(decimal_places=3, max_digits=10)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('consumer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend_app.consumer')),
            ],
            options={
                'unique_together': {('consumer', 'month')},
            },
        ),
        migrations.CreateModel(
            name='ConsumerHourlyConsumptionAggregate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hour', models.IntegerField(choices=[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11), (12, 12), (13, 13), (14, 14), (15, 15), (16, 16), (17, 17), (18, 18), (19, 19), (20, 20), (21, 21), (22, 22), (23, 23)])),
                ('consumption_kwh_sum', models.DecimalField(decimal_places=3, max_digits=10)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('consumer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend_app.consumer')),
            ],
            options={
                'unique_together': {('consumer', 'hour')},
            },
        ),
        migrations.CreateModel(
            name='ConsumerDailyConsumptionAggregate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day_of_week', models.IntegerField(choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7)])),
                ('consumption_kwh_sum', models.DecimalField(decimal_places=3, max_digits=10)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('consumer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend_app.consumer')),
            ],
            options={
                'unique_together': {('consumer', 'day_of_week')},
            },
        ),
        migrations.CreateModel(
            name='ConsumerConsumption',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('datetime', models.DateTimeField()),
                ('consumption_kwh', models.DecimalField(decimal_places=3, max_digits=10)),
                ('consumer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='consumptions', to='backend_app.consumer')),
            ],
            options={
                'ordering': ['-datetime'],
                'get_latest_by': 'datetime',
                'indexes': [models.Index(fields=['datetime'], name='backend_app_datetim_d69907_idx'), models.Index(fields=['consumer', 'datetime'], name='backend_app_consume_f7038e_idx')],
                'unique_together': {('consumer', 'datetime')},
            },
        ),
        migrations.CreateModel(
            name='ClusterMonthlyConsumptionAggregate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('month', models.IntegerField(choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11), (12, 12)])),
                ('consumption_kwh_sum', models.DecimalField(decimal_places=3, max_digits=10)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('cluster', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend_app.cluster')),
            ],
            options={
                'unique_together': {('cluster', 'month')},
            },
        ),
        migrations.CreateModel(
            name='ClusterHourlyConsumptionAggregate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hour', models.IntegerField(choices=[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11), (12, 12), (13, 13), (14, 14), (15, 15), (16, 16), (17, 17), (18, 18), (19, 19), (20, 20), (21, 21), (22, 22), (23, 23)])),
                ('consumption_kwh_sum', models.DecimalField(decimal_places=3, max_digits=10)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('cluster', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend_app.cluster')),
            ],
            options={
                'unique_together': {('cluster', 'hour')},
            },
        ),
        migrations.CreateModel(
            name='ClusterDailyConsumptionAggregate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day_of_week', models.IntegerField(choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7)])),
                ('consumption_kwh_sum', models.DecimalField(decimal_places=3, max_digits=10)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('cluster', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend_app.cluster')),
            ],
            options={
                'unique_together': {('cluster', 'day_of_week')},
            },
        ),
        migrations.CreateModel(
            name='ClusterConsumption',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('datetime', models.DateTimeField()),
                ('consumption_kwh', models.DecimalField(decimal_places=3, max_digits=10)),
                ('cluster', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cluster_consumptions', to='backend_app.cluster')),
            ],
            options={
                'ordering': ['-datetime'],
                'get_latest_by': 'datetime',
                'indexes': [models.Index(fields=['datetime'], name='backend_app_datetim_7b3dbe_idx'), models.Index(fields=['cluster', 'datetime'], name='backend_app_cluster_f6ae5d_idx')],
                'unique_together': {('cluster', 'datetime')},
            },
        ),
    ]
