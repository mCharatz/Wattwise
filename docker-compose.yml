version: "2.23"

services:
  frontend:
    container_name: frontend
    build:
      context: /frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    depends_on:
      - backend
    restart: always
    networks:
      - wattwise_network_frontend_backend
  backend:
    container_name: backend
    env_file:
      - /env/develop.env
    build:
      context: /backend
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    depends_on:
      - database
    restart: always
    networks:
      - wattwise_network_frontend_backend
      - wattwise_network_backend_database
  database_api:
    container_name: database_api
    env_file:
      - /env/develop.env
    build:
      context: /database_api
      dockerfile: Dockerfile
    ports:
      - "9000:9000"
    depends_on:
      - database
    restart: always
    networks:
      - wattwise_network_database_api_database
  database:
    container_name: database
    image: timescale/timescaledb:latest-pg14
    env_file:
      - /env/develop.env
    volumes:
      - database_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    restart: always
    networks:
      - wattwise_network_backend_database
      - wattwise_network_database_api_database
  redis:
    container_name: redis
    image: redis:latest
    ports:
      - "6379:6379"
    restart: always
    volumes:
      - redis_data:/data
volumes:
  database_data:
    driver: local
  redis_data:
    driver: local
networks:
  wattwise_network_frontend_backend:
    driver: bridge
  wattwise_network_backend_database:
    driver: bridge
  wattwise_network_database_api_database:
    driver: bridge


